To create a file in C we do it by declaring a pointer to a predefined struct that represents a file on the disk
In thi function call, we als decide whether we want to write to or read fro thie file

One function to create esthe next: typewrite.c <the name of the file>

#include <cs50.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>

int main(int argc, char* argv[])
{
    //ensure one and only command line argument
    if (argc != 2)
        return 1;
    // open a new document (if doesn't exist is going to create it in the current directory)
    // If we want to create in special directory we need to specify a file path to that directory
    FILE* fp = fopen(argv[1], "w"); //W: write (at the biggining of the file and replace what was stored) R: read A: append or appending to the file
    // check of succesful open
    if (fp == NULL)
    {
        printf("Could not create %s\n", argv[1]);
        return 2;
    }
    //get text from user and save to file
    while(true)
    {
        //get text from user
        prinf("Enter a new line of text or ""quit""\n");
        string input = GetString();
        // if user want to quit
        if(input != NULL && strcmp(iput, "quit")==0)
        {
            free(input);
            break;
        }
        else if(input != NULL)
        {
            fputs(input, fp); //is one of many function that we can use to write on the file. input: what's need to by written. fp: where
            fputs("\n", fp); //fp is the pointer of the address that we were writing
            printf("CHA-CHING\n\n");
            free(input);
        }
    }
    // close the file and end succesfully
    fclose(fp);
    return 0;
}

One function to read the file: ./printer doc.txt //simple print outthe contents of the file passed to it

#include <stdio.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
    // ensure one and only one command line argument
    if (argc != 2)
    {
        printf("you punt more than two command-line arguments");
        return 2;
    }
    
    // open a new document
    File* fp = fopen(argv[1], "r");
    
    // check for succesful open
    if (fp == NULL)
    {
        printf("could not open %s\n", argv[1]);
        return 1;
    }
    
    // storage space for each line of text
    char ouput[256];
    
    // get text from user and save to file
    
    for (int i = 1; fgets(output, sizeof(output), fp) != NULL; i++) //fgets is the companion function of fputs
    {
    // fgets contain three arguments, the first (output) is the pointer to the array of characters where the string wil be stored.
    // the second (sizeof(output)) is the maximun number of characters to be read
    // and the third (fp) is the pointer of the file which we are working
    
        printf("Line %02d: %s", i , output);
        
    // this forloop is going to end when fgets it will be NULL, there are two reason that can be NULL
    // First, an error may ocurred. How we noe that? because... output: ferror
    // the second, the end of the file was riched and no more characters were read (output: feof)
    }
    
    //close the file
    
    fclose(fp);
    
    return 0;
}